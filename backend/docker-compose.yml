version: "3"
services:
  
# LOCAL DEVELOPMENT
  db:
    image: "postgres:11"
    container_name: "monodb"
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=docker
      - POSTGRES_PASSWORD=docker
      - PGDATA=/data/postgres
      - POSTGRES_DB=nfactorvault
    volumes:
      - ./db/data:/data

  monoservice:
    build:
      context: .
      dockerfile: cmd/monoservice/Dockerfile
    environment:
      - ENV=DEV
      - WAIT_HOSTS=db:5432
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_DBNAME=nfactorvault
      - POSTGRES_USER=docker
      - POSTGRES_PWD=docker
    ports:
      - "8080:8080"
    depends_on:
      - db
    command: ["sh", "-c", "/wait && go run /app/cmd/monoservice/main.go"]
    tty: true

# TESTING
  test_db:
    image: "postgres:11"
    container_name: "monodb-test"
    ports:
      - "8432:5432"
    environment:
      - POSTGRES_USER=docker
      - POSTGRES_PASSWORD=docker
      - PGDATA=/postgres
      - POSTGRES_DB=nfactorvault

  go_test:
    build:
      context: .
      dockerfile: cmd/monoservice/Dockerfile
    environment:
      - ENV=TEST
      - WAIT_HOSTS=test_db:5432
      - POSTGRES_HOST=test_db
      - POSTGRES_PORT=5432
      - POSTGRES_DBNAME=nfactorvault
      - POSTGRES_USER=docker
      - POSTGRES_PWD=docker
      - LOG_ORM=${LOG_ORM}
    depends_on:
      - test_db
    command: ["sh", "-c", "/wait && go test -v -count=1 -p=1 ./..."]
    tty: true